{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/About.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","dist","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","toggleMode","role","aria-checked","htmlFor","TextForm","str","_useState","useState","_useState2","Object","slicedToArray","text","setText","displayText1","length","split","displayText2","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","join","navigator","clipboard","writeText","document","getElementById","innerHTML","defaultProps","About","myStyle","setMyStyle","_useState3","_useState4","btnText","setBtnText","aria-labelledby","data-bs-parent","border","Alert","word","alert","slice","msg","App","setMode","setAlert","message","setTimeout","body","Components_Alert","react_router_dist","exact","path","element","Components_About","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.171feb21.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n          <div className={`form-check form-switch text-${props.mode === 'dark' ? 'light' : 'dark'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" aria-checked=\"false\" id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title\",\r\n  aboutText: \"Set About text\",\r\n};","import React, { useState } from 'react';\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState(\"\");\r\n    // setText(\"New text\");\r\n\r\n    const handleUpClick = () => { \r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Uppercase\", \"success\");\r\n    };\r\n    const handleLoClick = () => { \r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lowercase\", \"success\");\r\n    };\r\n    const handleTrimClick = () => { \r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Whitespaces removed\", \"success\");\r\n    };\r\n    const textWordCounter = (str) => { \r\n        return str.split(/\\s+/).length;\r\n     }\r\n    const handleClearClick = () => { \r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"Text cleared\", \"success\");\r\n    };\r\n    const handleCopy = () => { \r\n        navigator.clipboard.writeText(document.getElementById('myBox').innerHTML);\r\n        props.showAlert(\"Text copied to clipboard\", \"success\");\r\n    }\r\n    const handleOnChange = (event) => { \r\n        setText(event.target.value);\r\n    };\r\n    let displayText1 = (text.length > 0) ? `${textWordCounter(text)} words and ${text.length} characters(including whitespaces, tabs and returns)` : '0 Characters';\r\n    let displayText2 = (text.length > 0) ? `${0.008 * text.split(\" \").length} minutes read` : '0 minutes read';\r\n\r\n    return (\r\n        <>\r\n        <div className='container my-3' style={ {color: ((props.mode === 'dark') ? 'white' : '#042743') } }>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea value={text} onChange={handleOnChange} style={ {backgroundColor: ((props.mode === 'dark') ? 'grey' : 'white'), color:  ((props.mode === 'dark') ? 'white' : '#042743')} } rows=\"10\" className=\"form-control\" id='myBox'></textarea>\r\n            </div>\r\n            <button className={`btn btn-${props.mode === 'dark' ? 'secondary' : 'primary'} mx-1`} onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className={`btn btn-${props.mode === 'dark' ? 'secondary' : 'primary'} mx-1`} onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button className={`btn btn-${props.mode === 'dark' ? 'secondary' : 'primary'} mx-1`} onClick={handleTrimClick}>Trim Whitespaces</button>\r\n            <button className={`btn btn-${props.mode === 'dark' ? 'secondary' : 'primary'} mx-1`} onClick={handleCopy}>Copy Text</button>\r\n            <button className={`btn btn-${props.mode === 'dark' ? 'secondary' : 'primary'} mx-1`} onClick={handleClearClick}>Clear Text</button>\r\n        </div>\r\n        <div className=\"container my-2\" style={ {color: ((props.mode === 'dark') ? 'white' : '#042743') } }>\r\n            <h1>Your text summary</h1>\r\n            <p>{displayText1}</p>\r\n            <p>{displayText2}</p>\r\n            <h2>Preview</h2>\r\n            <p>{(text.length > 0) ? text : \"Enter some text to preview\"}</p>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nfunction About() {\r\n\r\n    const [myStyle, setMyStyle] = useState({ color: 'black', backgroundColor: 'white' });\r\n    const [btnText, setBtnText] = useState(\"Enable Dark Mode\");\r\n\r\n    const toggleStyle = () => { \r\n        if(myStyle.color === 'black') \r\n        {\r\n            setMyStyle({color: 'white', backgroundColor: 'black', border: '1px solid white'});\r\n            setBtnText(\"Enable Light Mode\");\r\n        }\r\n            \r\n        else \r\n        {\r\n            setMyStyle({ color: 'black', backgroundColor: 'white' });\r\n            setBtnText(\"Enable Dark Mode\");\r\n        }    \r\n    };\r\n\r\n\r\n    return (\r\n        <div className='container' style={myStyle}>\r\n            <h2 className='my-3'>About Us</h2>\r\n            <div className=\"accordion\" style={myStyle} id=\"accordionExample\">\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            Accordion Item #1\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            Accordion Item #2\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                            Accordion Item #3\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container my-3\">\r\n                <button onClick={toggleStyle} type=\"button\" className=\"btn btn-primary\">{btnText}</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const capitalize = (word) => { \r\n        return word.slice(0, 1).toUpperCase() + word.slice(1,)\r\n    }\r\n\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert","import './App.css';\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\";\nimport About from \"./Components/About\";\nimport React, { useState } from 'react';\nimport Alert from './Components/Alert';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert('Dark Mode has been enabled', 'success');\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light Mode has been enabled', 'success');\n    }\n  }\n\n  return (\n    <>\n      <Router>\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <Routes>\n          <Route exact path=\"/about\" element={<About />}></Route>\n          <Route exact path=\"/\" element={<TextForm heading=\"Enter the text to Analyze\" mode={mode} showAlert={showAlert} />}></Route>\n        </Routes>\n      </Router>\n      {/* <TextForm heading=\"Enter the text to Analyze\" mode={mode} showAlert={showAlert} />\n      <About /> */}\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}